{"version":3,"sources":["../node_modules/google-spreadsheet sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","EVENT_TYPES","POOP","ASLEEP","AWAKE","EAT","MISC","ActivityEvent","obj","Object","classCallCheck","this","createClass","key","value","row","start","timestamp","time","_","parse","parseTime","text","String","activity","match","PoopActivityEvent","AsleepActivityEvent","AwakeActivityEvent","EatActivityEvent","event","title","color","get","emoji","concat","_ActivityEvent","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","convertMinsToHrsMins","mins","h","Math","floor","m","getAsleepTimeTitle","minutesAsleep","_ActivityEvent2","differenceInHours","end","objectSpread","esm_get","prototype","call","differenceInMinutes","_ActivityEvent3","_ActivityEvent4","_this","objs","push","amount","set","parseInt","length","join","NextSleepActivityEvent","_ActivityEvent5","lastAwakeTime","_this2","now","undefined","Date","AWAKE_DURATION","BEDTIME","WAKETIME","_lastAwakeTime","addHours","_start","max","awakeText","minutesAwake","getAwakeTimeTitle","hours","getHours","processEvents","rows","recent","events","acc","create","lastAsleepEvent","canCoalesce","add","lastEatEvent","type","getAllDayEvents","eventsGroupedByDate","startDate","format","endDate","getEventsGroupedByDate","date","groupedEvents","allDayEvents","numPoops","totalTimeAsleep","asleepEvents","timeAsleep","startTime","endTime","startOfDay","getTotalTimeAsleep","numNaps","totalAmount","numEats","getNextSleepEvent","App","_useState","useState","_useState2","slicedToArray","data","setData","useEffect","fetchData","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","_processEvents","nextSleepEvent","allEvents","wrap","_context","prev","next","gsjson","spreadsheetId","process","sent","toJson","stop","window","addEventListener","removeEventListener","react_default","createElement","className","main_esm","defaultView","height","navLinks","timeGridEventMinHeight","nowIndicator","header","left","center","right","plugins","listPlugin","timeGridPlugin","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7546582.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 583;","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport gsjson from 'google-spreadsheet-to-json';\nimport * as _ from 'lodash-es';\nimport {\n  addHours,\n  differenceInHours,\n  differenceInMinutes,\n  format,\n  getHours,\n  max,\n  parse,\n  startOfDay,\n} from 'date-fns';\n\nimport './App.css';\n\nexport const EVENT_TYPES = {\n  POOP: 'POOP',\n  ASLEEP: 'ASLEEP',\n  AWAKE: 'AWAKE',\n  EAT: 'EAT',\n  MISC: 'MISC',\n};\n\nexport function parseTime(timestamp) {\n  let time = timestamp;\n\n  time = _.replace(time, ' at ', ' ');\n  time = _.replace(time, 'AM', ' AM');\n  time = _.replace(time, 'PM', ' PM');\n\n  return parse(time);\n}\n\nexport class ActivityEvent {\n  static create(row) {\n    const start = parseTime(row.timestamp);\n    const text = String(row.activity);\n    if (text.match(/poo/)) {\n      return new PoopActivityEvent({ start, text });\n    } else if (text.match(/sleep|down/)) {\n      return new AsleepActivityEvent({ start, text });\n    } else if (text.match(/wake|up/)) {\n      return new AwakeActivityEvent({ start, text });\n    } else if (text.match(/\\d+/)) {\n      return new EatActivityEvent({ start, text });\n    } else {\n      return new ActivityEvent({ start, text });\n    }\n  }\n\n  constructor(obj) {\n    this.obj = obj;\n  }\n\n  get color() {\n    return this.obj.color;\n  }\n\n  get emoji() {\n    return this.obj.emoji || '';\n  }\n\n  get start() {\n    return this.obj.start;\n  }\n\n  get title() {\n    return `${this.emoji}${this.text}`;\n  }\n\n  get text() {\n    return this.obj.text || '';\n  }\n\n  get type() {\n    return EVENT_TYPES.MISC;\n  }\n\n  canCoalesce(event) {\n    return false;\n  }\n\n  toJson() {\n    return {\n      start: this.start,\n      title: this.title,\n      color: this.color,\n    };\n  }\n}\n\nexport class PoopActivityEvent extends ActivityEvent {\n  get color() {\n    return 'brown';\n  }\n\n  get emoji() {\n    return '💩';\n  }\n\n  get text() {\n    return '';\n  }\n\n  get type() {\n    return EVENT_TYPES.POOP;\n  }\n}\n\nfunction convertMinsToHrsMins(mins) {\n  let h = Math.floor(mins / 60);\n  let m = mins % 60;\n  m = m < 10 ? '0' + m : m;\n  return `${h}:${m}`;\n}\n\nfunction getAwakeTimeTitle(minutesAwake) {\n  return `awake for ${convertMinsToHrsMins(minutesAwake)}`;\n}\n\nfunction getAsleepTimeTitle(minutesAsleep) {\n  return `asleep for ${convertMinsToHrsMins(minutesAsleep)}`;\n}\nexport class AsleepActivityEvent extends ActivityEvent {\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '😴';\n  }\n\n  get text() {\n    if (this.end) {\n      const minutesAsleep = differenceInMinutes(this.end, this.start);\n      return getAsleepTimeTitle(minutesAsleep);\n    } else {\n      return super.text;\n    }\n  }\n\n  get type() {\n    return EVENT_TYPES.ASLEEP;\n  }\n\n  canCoalesce(event) {\n    return differenceInHours(event.start, this.start) < 24;\n  }\n\n  add(event) {\n    this.end = event.start;\n  }\n\n  toJson() {\n    return {\n      ...super.toJson(),\n      end: this.end,\n    };\n  }\n}\n\nexport class AwakeActivityEvent extends ActivityEvent {\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '😊';\n  }\n\n  get type() {\n    return EVENT_TYPES.AWAKE;\n  }\n}\n\nexport class EatActivityEvent extends ActivityEvent {\n  constructor(obj) {\n    super();\n    this.objs = [obj];\n  }\n\n  get obj() {\n    return this.objs[0];\n  }\n\n  set obj(obj) {}\n\n  get amount() {\n    return _.sumBy(this.objs, obj => parseInt(obj.text.match(/\\d+/)[0], 10));\n  }\n\n  get color() {\n    return 'purple';\n  }\n\n  get emoji() {\n    return _.times(this.objs.length, _.constant('🍼')).join('');\n  }\n\n  get text() {\n    return `took ${this.amount}`;\n  }\n\n  get type() {\n    return EVENT_TYPES.EAT;\n  }\n\n  canCoalesce(event) {\n    return differenceInMinutes(event.start, this.start) < 60;\n  }\n\n  add(event) {\n    this.objs.push(event.obj);\n    this.end = event.start;\n  }\n\n  toJson() {\n    return {\n      ...super.toJson(),\n      amount: this.amount,\n      end: this.end,\n    };\n  }\n}\n\nexport class NextSleepActivityEvent extends ActivityEvent {\n  AWAKE_DURATION = 2.5; // in hours\n  BEDTIME = 22; // 10pm\n  WAKETIME = 10; // 10am\n\n  constructor(lastAwakeTime, now = new Date()) {\n    super();\n    this._lastAwakeTime = lastAwakeTime;\n    const time = addHours(lastAwakeTime, this.AWAKE_DURATION);\n    this._start = max(time, now);\n  }\n\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '💤';\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get text() {\n    const minutesAwake = differenceInMinutes(this.start, this._lastAwakeTime);\n    const awakeText = getAwakeTimeTitle(minutesAwake);\n    const hours = getHours(this.start);\n    if (hours >= this.BEDTIME || hours < this.WAKETIME) {\n      return `Time to sleep! (${awakeText})`;\n    } else {\n      return `Time for a nap! (${awakeText})`;\n    }\n  }\n}\n\nexport function processEvents(rows) {\n  const recent = {};\n\n  // assume list is sorted\n  const events = _.reduce(\n    rows,\n    (acc, row) => {\n      const event = ActivityEvent.create(row);\n\n      if (event instanceof AwakeActivityEvent) {\n        const lastAsleepEvent = recent[EVENT_TYPES.ASLEEP];\n        if (lastAsleepEvent && lastAsleepEvent.canCoalesce(event)) {\n          lastAsleepEvent.add(event);\n        } else {\n          acc.push(event);\n        }\n      } else if (event instanceof EatActivityEvent) {\n        const lastEatEvent = recent[EVENT_TYPES.EAT];\n        if (lastEatEvent && lastEatEvent.canCoalesce(event)) {\n          lastEatEvent.add(event);\n          return acc;\n        } else {\n          acc.push(event);\n        }\n      } else {\n        acc.push(event);\n      }\n      recent[event.type] = event;\n\n      return acc;\n    },\n    []\n  );\n\n  return { events, recent };\n}\n\nexport function getEventsGroupedByDate(events) {\n  return _.reduce(\n    events,\n    (acc, event) => {\n      const startDate = format(event.start, 'YYYY-MM-DD');\n      if (!acc[startDate]) {\n        acc[startDate] = [];\n      }\n      acc[startDate].push(event);\n\n      if (event.end) {\n        const endDate = format(event.end, 'YYYY-MM-DD');\n        if (startDate !== endDate) {\n          if (!acc[endDate]) {\n            acc[endDate] = [];\n          }\n          acc[endDate].push(event);\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n}\n\nexport function getTotalTimeAsleep(asleepEvents, date) {\n  return _.reduce(\n    asleepEvents,\n    (acc, event) => {\n      let timeAsleep;\n      if (event.end) {\n        let startTime;\n        let endTime;\n        if (format(event.start, 'YYYY-MM-DD') !== date) {\n          // sleep from night before\n          startTime = startOfDay(event.end);\n          endTime = event.end;\n        } else if (format(event.end, 'YYYY-MM-DD') !== date) {\n          // tonight's sleep\n          startTime = event.start;\n          endTime = startOfDay(event.end);\n        } else {\n          // nap\n          startTime = event.start;\n          endTime = event.end;\n        }\n        timeAsleep = differenceInMinutes(endTime, startTime);\n      } else {\n        timeAsleep = 0;\n      }\n      return acc + timeAsleep;\n    },\n    0\n  );\n}\n\nfunction getAllDayEvents(events) {\n  // Use formatted dates here to represent all-day\n  const eventsGroupedByDate = getEventsGroupedByDate(events);\n\n  return _.flatMap(eventsGroupedByDate, (events, date) => {\n    const groupedEvents = _.groupBy(events, _.property('type'));\n    const allDayEvents = [];\n    if (groupedEvents[EVENT_TYPES.POOP]) {\n      const numPoops = groupedEvents[EVENT_TYPES.POOP].length;\n      allDayEvents.push(\n        new ActivityEvent({\n          emoji: _.times(numPoops, _.constant('💩')).join(''),\n          start: date,\n          color: 'brown',\n        })\n      );\n    }\n    if (groupedEvents[EVENT_TYPES.ASLEEP]) {\n      const totalTimeAsleep = getTotalTimeAsleep(\n        groupedEvents[EVENT_TYPES.ASLEEP],\n        date\n      );\n      if (totalTimeAsleep) {\n        const numNaps = groupedEvents[EVENT_TYPES.ASLEEP].length;\n        allDayEvents.push(\n          new ActivityEvent({\n            emoji: _.times(numNaps, _.constant('😴')).join(''),\n            start: date,\n            text: getAsleepTimeTitle(totalTimeAsleep),\n            color: 'green',\n          })\n        );\n      }\n    }\n    if (groupedEvents[EVENT_TYPES.EAT]) {\n      const totalAmount = _.reduce(\n        groupedEvents[EVENT_TYPES.EAT],\n        (acc, event) => {\n          let amount;\n          if (event.amount) {\n            amount = event.amount;\n          } else {\n            amount = 0;\n          }\n          return acc + amount;\n        },\n        0\n      );\n      if (totalAmount) {\n        const numEats = groupedEvents[EVENT_TYPES.EAT].length;\n        allDayEvents.push(\n          new ActivityEvent({\n            emoji: _.times(numEats, _.constant('🍼')).join(''),\n            start: date,\n            text: `took ${totalAmount}`,\n            color: 'purple',\n          })\n        );\n      }\n    }\n\n    return allDayEvents;\n  });\n}\n\nfunction getNextSleepEvent(recent) {\n  if (\n    recent[EVENT_TYPES.AWAKE] &&\n    recent[EVENT_TYPES.ASLEEP] &&\n    recent[EVENT_TYPES.AWAKE].start > recent[EVENT_TYPES.ASLEEP].start\n  ) {\n    return new NextSleepActivityEvent(recent[EVENT_TYPES.AWAKE].start);\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      const rows = await gsjson({\n        spreadsheetId: process.env.REACT_APP_SPREADSHEET_ID,\n      });\n\n      const { events, recent } = processEvents(rows);\n\n      const nextSleepEvent = getNextSleepEvent(recent);\n      if (nextSleepEvent) {\n        events.push(nextSleepEvent);\n      }\n\n      const allDayEvents = getAllDayEvents(events);\n\n      const allEvents = events.concat(allDayEvents);\n\n      setData(_.map(allEvents, event => event.toJson()));\n    }\n\n    fetchData();\n\n    window.addEventListener('focus', fetchData);\n\n    return () => {\n      window.removeEventListener('focus', fetchData);\n    };\n  }, []);\n\n  return (\n    <div className=\"root\">\n      <FullCalendar\n        defaultView=\"listDay\"\n        height=\"parent\"\n        navLinks\n        timeGridEventMinHeight={40}\n        nowIndicator\n        header={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'timeGridWeek,timeGridDay,listDay',\n        }}\n        plugins={[listPlugin, timeGridPlugin]}\n        events={data}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}