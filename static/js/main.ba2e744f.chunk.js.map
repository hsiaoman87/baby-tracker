{"version":3,"sources":["../node_modules/google-spreadsheet sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","EVENT_TYPES","POOP","ASLEEP","AWAKE","EAT","MISC","ActivityEvent","obj","Object","classCallCheck","this","createClass","key","value","row","start","timestamp","time","_","parse","parseTime","text","activity","match","PoopActivityEvent","AsleepActivityEvent","AwakeActivityEvent","EatActivityEvent","event","title","color","get","emoji","concat","_ActivityEvent","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","getAsleepTimeTitle","minutesAsleep","mins","h","Math","floor","m","convertMinsToHrsMins","_ActivityEvent2","differenceInHours","end","objectSpread","esm_get","prototype","call","differenceInMinutes","_ActivityEvent3","_ActivityEvent4","_this","objs","push","amount","set","parseInt","length","join","NextSleepActivityEvent","_ActivityEvent5","lastAwakeTime","_this2","now","undefined","Date","AWAKE_DURATION","BEDTIME","WAKETIME","addHours","_start","max","hours","getHours","processEvents","rows","recent","events","acc","create","lastAsleepEvent","canCoalesce","add","lastEatEvent","type","getAllDayEvents","eventsGroupedByDate","startDate","format","endDate","getEventsGroupedByDate","date","groupedEvents","allDayEvents","numPoops","totalTimeAsleep","asleepEvents","timeAsleep","startTime","endTime","startOfDay","getTotalTimeAsleep","numNaps","totalAmount","numEats","getNextSleepEvent","App","_useState","useState","_useState2","slicedToArray","data","setData","useEffect","fetchData","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","_processEvents","nextSleepEvent","allEvents","wrap","_context","prev","next","gsjson","spreadsheetId","process","sent","toJson","stop","window","addEventListener","removeEventListener","react_default","createElement","className","main_esm","defaultView","height","navLinks","timeGridEventMinHeight","nowIndicator","header","left","center","right","plugins","listPlugin","timeGridPlugin","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba2e744f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 583;","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport gsjson from 'google-spreadsheet-to-json';\nimport * as _ from 'lodash-es';\nimport {\n  addHours,\n  differenceInHours,\n  differenceInMinutes,\n  format,\n  getHours,\n  max,\n  parse,\n  startOfDay,\n} from 'date-fns';\n\nimport './App.css';\n\nexport const EVENT_TYPES = {\n  POOP: 'POOP',\n  ASLEEP: 'ASLEEP',\n  AWAKE: 'AWAKE',\n  EAT: 'EAT',\n  MISC: 'MISC',\n};\n\nexport function parseTime(timestamp) {\n  let time = timestamp;\n\n  time = _.replace(time, ' at ', ' ');\n  time = _.replace(time, 'AM', ' AM');\n  time = _.replace(time, 'PM', ' PM');\n\n  return parse(time);\n}\n\nexport class ActivityEvent {\n  static create(row) {\n    const start = parseTime(row.timestamp);\n    const text = row.activity;\n    if (text.match(/poop/)) {\n      return new PoopActivityEvent({ start, text });\n    } else if (text.match(/asleep|down/)) {\n      return new AsleepActivityEvent({ start, text });\n    } else if (text.match(/awake|up/)) {\n      return new AwakeActivityEvent({ start, text });\n    } else if (text.match(/\\d+/)) {\n      return new EatActivityEvent({ start, text });\n    } else {\n      return new ActivityEvent({ start, text });\n    }\n  }\n\n  constructor(obj) {\n    this.obj = obj;\n  }\n\n  get color() {\n    return this.obj.color;\n  }\n\n  get emoji() {\n    return this.obj.emoji || '';\n  }\n\n  get start() {\n    return this.obj.start;\n  }\n\n  get title() {\n    return `${this.emoji}${this.text}`;\n  }\n\n  get text() {\n    return this.obj.text || '';\n  }\n\n  get type() {\n    return EVENT_TYPES.MISC;\n  }\n\n  canCoalesce(event) {\n    return false;\n  }\n\n  toJson() {\n    return {\n      start: this.start,\n      title: this.title,\n      color: this.color,\n    };\n  }\n}\n\nexport class PoopActivityEvent extends ActivityEvent {\n  get color() {\n    return 'brown';\n  }\n\n  get emoji() {\n    return '💩';\n  }\n\n  get text() {\n    return '';\n  }\n\n  get type() {\n    return EVENT_TYPES.POOP;\n  }\n}\n\nfunction convertMinsToHrsMins(mins) {\n  let h = Math.floor(mins / 60);\n  let m = mins % 60;\n  m = m < 10 ? '0' + m : m;\n  return `${h}:${m}`;\n}\n\nfunction getAsleepTimeTitle(minutesAsleep) {\n  return `asleep for ${convertMinsToHrsMins(minutesAsleep)}`;\n}\nexport class AsleepActivityEvent extends ActivityEvent {\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '😴';\n  }\n\n  get text() {\n    if (this.end) {\n      const minutesAsleep = differenceInMinutes(this.end, this.start);\n      return getAsleepTimeTitle(minutesAsleep);\n    } else {\n      return super.text;\n    }\n  }\n\n  get type() {\n    return EVENT_TYPES.ASLEEP;\n  }\n\n  canCoalesce(event) {\n    return differenceInHours(event.start, this.start) < 24;\n  }\n\n  add(event) {\n    this.end = event.start;\n  }\n\n  toJson() {\n    return {\n      ...super.toJson(),\n      end: this.end,\n    };\n  }\n}\n\nexport class AwakeActivityEvent extends ActivityEvent {\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '😊';\n  }\n\n  get type() {\n    return EVENT_TYPES.AWAKE;\n  }\n}\n\nexport class EatActivityEvent extends ActivityEvent {\n  constructor(obj) {\n    super();\n    this.objs = [obj];\n  }\n\n  get obj() {\n    return this.objs[0];\n  }\n\n  set obj(obj) {}\n\n  get amount() {\n    return _.sumBy(this.objs, obj => parseInt(obj.text.match(/\\d+/)[0], 10));\n  }\n\n  get color() {\n    return 'purple';\n  }\n\n  get emoji() {\n    return _.times(this.objs.length, _.constant('🍼')).join('');\n  }\n\n  get text() {\n    return `took ${this.amount}`;\n  }\n\n  get type() {\n    return EVENT_TYPES.EAT;\n  }\n\n  canCoalesce(event) {\n    return differenceInMinutes(event.start, this.start) < 60;\n  }\n\n  add(event) {\n    this.objs.push(event.obj);\n    this.end = event.start;\n  }\n\n  toJson() {\n    return {\n      ...super.toJson(),\n      amount: this.amount,\n      end: this.end,\n    };\n  }\n}\n\nexport class NextSleepActivityEvent extends ActivityEvent {\n  AWAKE_DURATION = 2; // in hours\n  BEDTIME = 22; // 10pm\n  WAKETIME = 10; // 10am\n\n  constructor(lastAwakeTime, now = new Date()) {\n    super();\n    const time = addHours(lastAwakeTime, this.AWAKE_DURATION);\n    this._start = max(time, now);\n  }\n\n  get color() {\n    return 'green';\n  }\n\n  get emoji() {\n    return '💤';\n  }\n\n  get start() {\n    return this._start;\n  }\n\n  get text() {\n    const hours = getHours(this.start);\n    if (hours >= this.BEDTIME || hours < this.WAKETIME) {\n      return 'Time to sleep!';\n    } else {\n      return 'Time for a nap!';\n    }\n  }\n}\n\nexport function processEvents(rows) {\n  const recent = {};\n\n  // assume list is sorted\n  const events = _.reduce(\n    rows,\n    (acc, row) => {\n      const event = ActivityEvent.create(row);\n\n      if (event instanceof AwakeActivityEvent) {\n        const lastAsleepEvent = recent[EVENT_TYPES.ASLEEP];\n        if (lastAsleepEvent && lastAsleepEvent.canCoalesce(event)) {\n          lastAsleepEvent.add(event);\n        } else {\n          acc.push(event);\n        }\n      } else if (event instanceof EatActivityEvent) {\n        const lastEatEvent = recent[EVENT_TYPES.EAT];\n        if (lastEatEvent && lastEatEvent.canCoalesce(event)) {\n          lastEatEvent.add(event);\n        } else {\n          acc.push(event);\n        }\n      } else {\n        acc.push(event);\n      }\n      recent[event.type] = event;\n\n      return acc;\n    },\n    []\n  );\n\n  return { events, recent };\n}\n\nexport function getEventsGroupedByDate(events) {\n  return _.reduce(\n    events,\n    (acc, event) => {\n      const startDate = format(event.start, 'YYYY-MM-DD');\n      if (!acc[startDate]) {\n        acc[startDate] = [];\n      }\n      acc[startDate].push(event);\n\n      if (event.end) {\n        const endDate = format(event.end, 'YYYY-MM-DD');\n        if (startDate !== endDate) {\n          if (!acc[endDate]) {\n            acc[endDate] = [];\n          }\n          acc[endDate].push(event);\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n}\n\nexport function getTotalTimeAsleep(asleepEvents, date) {\n  return _.reduce(\n    asleepEvents,\n    (acc, event) => {\n      let timeAsleep;\n      if (event.end) {\n        let startTime;\n        let endTime;\n        if (format(event.start, 'YYYY-MM-DD') !== date) {\n          // sleep from night before\n          startTime = startOfDay(event.end);\n          endTime = event.end;\n        } else if (format(event.end, 'YYYY-MM-DD') !== date) {\n          // tonight's sleep\n          startTime = event.start;\n          endTime = startOfDay(event.end);\n        } else {\n          // nap\n          startTime = event.start;\n          endTime = event.end;\n        }\n        timeAsleep = differenceInMinutes(endTime, startTime);\n      } else {\n        timeAsleep = 0;\n      }\n      return acc + timeAsleep;\n    },\n    0\n  );\n}\n\nfunction getAllDayEvents(events) {\n  // Use formatted dates here to represent all-day\n  const eventsGroupedByDate = getEventsGroupedByDate(events);\n\n  return _.flatMap(eventsGroupedByDate, (events, date) => {\n    const groupedEvents = _.groupBy(events, _.property('type'));\n    const allDayEvents = [];\n    if (groupedEvents[EVENT_TYPES.POOP]) {\n      const numPoops = groupedEvents[EVENT_TYPES.POOP].length;\n      allDayEvents.push(\n        new ActivityEvent({\n          emoji: _.times(numPoops, _.constant('💩')).join(''),\n          start: date,\n          color: 'brown',\n        })\n      );\n    }\n    if (groupedEvents[EVENT_TYPES.ASLEEP]) {\n      const totalTimeAsleep = getTotalTimeAsleep(\n        groupedEvents[EVENT_TYPES.ASLEEP],\n        date\n      );\n      if (totalTimeAsleep) {\n        const numNaps = groupedEvents[EVENT_TYPES.ASLEEP].length;\n        allDayEvents.push(\n          new ActivityEvent({\n            emoji: _.times(numNaps, _.constant('😴')).join(''),\n            start: date,\n            text: getAsleepTimeTitle(totalTimeAsleep),\n            color: 'green',\n          })\n        );\n      }\n    }\n    if (groupedEvents[EVENT_TYPES.EAT]) {\n      const totalAmount = _.reduce(\n        groupedEvents[EVENT_TYPES.EAT],\n        (acc, event) => {\n          let amount;\n          if (event.amount) {\n            amount = event.amount;\n          } else {\n            amount = 0;\n          }\n          return acc + amount;\n        },\n        0\n      );\n      if (totalAmount) {\n        const numEats = groupedEvents[EVENT_TYPES.EAT].length;\n        allDayEvents.push(\n          new ActivityEvent({\n            emoji: _.times(numEats, _.constant('🍼')).join(''),\n            start: date,\n            text: `took ${totalAmount}`,\n            color: 'purple',\n          })\n        );\n      }\n    }\n\n    return allDayEvents;\n  });\n}\n\nfunction getNextSleepEvent(recent) {\n  if (\n    recent[EVENT_TYPES.AWAKE] &&\n    recent[EVENT_TYPES.ASLEEP] &&\n    recent[EVENT_TYPES.AWAKE].start > recent[EVENT_TYPES.ASLEEP].start\n  ) {\n    return new NextSleepActivityEvent(recent[EVENT_TYPES.AWAKE].start);\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      const rows = await gsjson({\n        spreadsheetId: process.env.REACT_APP_SPREADSHEET_ID,\n      });\n\n      const { events, recent } = processEvents(rows);\n\n      const nextSleepEvent = getNextSleepEvent(recent);\n      if (nextSleepEvent) {\n        events.push(nextSleepEvent);\n      }\n\n      const allDayEvents = getAllDayEvents(events);\n\n      const allEvents = events.concat(allDayEvents);\n\n      setData(_.map(allEvents, event => event.toJson()));\n    }\n\n    fetchData();\n\n    window.addEventListener('focus', fetchData);\n\n    return () => {\n      window.removeEventListener('focus', fetchData);\n    };\n  }, []);\n\n  return (\n    <div className=\"root\">\n      <FullCalendar\n        defaultView=\"listDay\"\n        height=\"parent\"\n        navLinks\n        timeGridEventMinHeight={40}\n        nowIndicator\n        header={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'timeGridWeek,timeGridDay,listDay',\n        }}\n        plugins={[listPlugin, timeGridPlugin]}\n        events={data}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}